name: pipeline

on:
  push:
    branches:
      - main
      - develop
      - feat/*

jobs:
  unit-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Run unit tests
      run: npm test

    - name: Generate test coverage
      run: npm run coverage

    - name: Upload coverage report
      uses: actions/upload-artifact@v4.4.0
      with:
        name: coverage-report
        path: coverage/

  code-analysis:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Check Java version
      run: java -version

    - name: Install dependencies
      run: npm install

    - name: Run SonarCloud analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} #gerado automaticamente pelo github
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} #gerado manualmente no sonarCloud
      run: npm run sonar

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: code-analysis

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

     - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: jennyffernm/app-node-18:latest
        tag-sha: true

    - name: QEMU
      uses: docker/setup-qemu-action@v2

    - name: Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: login to Dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}

    - name: install doctl
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/app-node-18:latest
        cache-to: type=inline
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/app-node-18:latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ID }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Deploy to EKS
      run: |
        aws eks update-kubeconfig --name fast-food-project
        kubectl apply -f kubernetes/Application
        kubectl set image deployment/app-deployment app-node-18=${{ secrets.DOCKERHUB_USERNAME }}/app-node-18:latest